
@if (_elements.IsNullOrEmpty()) { return; }

<div>
    <MudText Style="font-size: 20px; text-transform: uppercase; justify-self: start; flex-grow: 1; flex-shrink: 1; font-weight: bold; font-family: unica; padding: 0; margin: 0;">Inflections</MudText>
    <MudTable Items=@_elements Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" Elevation=0>
        <HeaderContent>
            <MudTh>Inflection</MudTh>
            <MudTh>Affirmative</MudTh>
            <MudTh>Negative</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.Name</MudTd>
            <MudTd DataLabel="Nr">@context.Affirmative</MudTd>
            <MudTd DataLabel="Sign">@context.Negative</MudTd>
        </RowTemplate>
    </MudTable>
</div>

@code {
    private List<InflectionItem> _elements = new();

    private List<WordInflectionPair> _inflectionPairs = new()
    {
        new WordInflectionPair("Present", 
            Informal: new WordInflectionForm("出す", "出さない"),
            Formal: new WordInflectionForm("出します", "出しません")),
        new WordInflectionPair("Past",
            Informal: new WordInflectionForm("出した", "出さなかった"),
            Formal: new WordInflectionForm("出しました", "出しませんでした")),
        new WordInflectionPair("Te-Form",
            Informal: new WordInflectionForm("出して", "出さなくて")),
        new WordInflectionPair("Potential",
            Informal: new WordInflectionForm("出せる", "出せない")),
    };

    protected override void OnInitialized()
    {
        foreach (var pair in _inflectionPairs)
        {
            _elements.Add(new(pair.Name, pair.Informal.Positive, pair.Informal.Negative));
            if (pair.Formal is not null)
                _elements.Add(new($"{pair.Name}, Formal", pair.Formal.Positive, pair.Formal.Negative));
        }
    }

    public record InflectionItem(string Name, string Affirmative, string? Negative);

    public record WordInflectionPair(
        string Name,
        WordInflectionForm Informal,
        WordInflectionForm? Formal = null);

    public record WordInflectionForm(
        string Positive,
        string? Negative = null);
}
