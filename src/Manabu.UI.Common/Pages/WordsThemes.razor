@page "/words/themes"

<style>
    .bg {
        background-image: url('_content/Manabu.UI.Common/images/wall.jpg'); 
        background-repeat: repeat-y;
        background-size: cover; 
        opacity: 0.2;
    }

    .bg-settings {
        background-image: url('_content/Manabu.UI.Common/images/wall.jpg'); 
        background-repeat: repeat-y;
        background-size: cover; 
    }

    .anim {
        position: relative;
    }

    .btn-bg {
        background-image: url('_content/Manabu.UI.Common/images/wall.jpg');
        background-size: cover;
        opacity: 1;
        filter: brightness(20%);
    }

    .neon-button {
        width: calc(100% + 1px);
        height: calc(100% + 1px);
        border: red 2px solid;
        box-shadow: inset 0 0 0.5em 0 red, 0 0 0.5em 0 red;
    }

    @@keyframes glow {
        from {
            text-shadow: 0px 0px 5px black
        }

        to {
            text-shadow: 2px 2px 15px black
        }
    }
</style>

<div class="bg fixed top-0 left-0 w-full h-full"/>

<div class="area -z-10 cursor-pointer">
    <ul class="circles -z-10 cursor-pointer">
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
    </ul>
</div>

@* <MudStack Row=true Class="flex flex-wrap">
        <MudTooltip Text="Add Phrase">
            <MudIconButton Icon="@Icons.Material.Outlined.AddBox" aria-label="delete" />
        </MudTooltip>
        <MudDivider Vertical="true" FlexItem="true" />
        <MudTooltip Text="Multiselect">
            <MudIconButton Icon="@Icons.Material.Outlined.SelectAll" aria-label="delete" />
        </MudTooltip>
        <MudTooltip Text="Edit">
            <MudIconButton Icon="@Icons.Material.Outlined.Edit" aria-label="delete" />
        </MudTooltip>
        <MudTooltip Text="Cut">
            <MudIconButton Icon="@Icons.Material.Outlined.ContentCut" aria-label="delete" />
        </MudTooltip>
        <MudTooltip Text="Copy All">
            <MudIconButton Icon="@Icons.Material.Outlined.CopyAll" aria-label="delete" />
        </MudTooltip>
        <MudTooltip Text="Paste">
            <MudIconButton Icon="@Icons.Material.Outlined.ContentPaste" aria-label="delete" />
        </MudTooltip>
        <MudTooltip Text="Settings">
            <MudIconButton Icon="@Icons.Material.Outlined.Settings" aria-label="delete" />
        </MudTooltip>
        <MudTooltip Text="Display Settings">
            <MudIconButton Icon="@Icons.Material.Outlined.Create" aria-label="delete" />
        </MudTooltip>
    </MudStack> *@


<div class="word-themes w-full h-full flex flex-col gap-5 items-center mb-10 top-[72px] pt-5">
    <MudIconButton Icon=@Icons.Material.Filled.Settings 
        OnClick=@(() => _drawer.Open = true )
        Class="z-10 settings-button top-[75px] usmx:top-[11px] right-[15px] fixed hover:brightness-80 " />
        
    <div class="fox-bg bg-cover bg-center fixed top-0 w-full h-full opacity-[0.1]" />
    <div class="scroll-enabler absolute h-full w-full"></div>
    <div class="relative">
        <MudText Class="font-bold text-4xl mb-5 usmx:text-3xl">Words By Theme</MudText>
        <MudText Class="text-md mb-5 z-10 cursor-pointer">
            &nbsp;&nbsp;&nbsp;&nbsp; Initial lists contain basic vocabulary grouped by theme. It overlaps with JLPT level words starting from N5 level, but might include more similar words, so
            it can be learned at the same time.
        </MudText>
        <MudText Class="font-bold text-2xl text-left z-10">Simple Words 1-50</MudText>
    </div>
    
    <div class="relative w-full h-full flex flex-wrap gap-7 items-center justify-center py-3">
        @* <div class="absolute bg-slate-800 w-[100000px] h-full `top-[100px] -z-10" /> *@
        @for (int i = 0; i < 50; i++) 
        {
            <WordTile
                MainText=@GetRandomKanji()
                MeaningText=@GetRandomNoun()
                HiraganaText=@GetRandomJLPTN5Word()
                MeaningEnabled=@MeaningsEnabled 
                HiraganaEnabled=@HiraganaEnabled />
        }
    </div>

    <div class="flex flex-col gap-15">
        <div class="flex gap-10">
            @* <div class="absolute bg-slate-800 w-[100000px] h-full `top-[100px] -z-10" /> *@
            <div>
                <div class="
                relative w-[65px] flex flex-col h-[65px]
                items-center justify-center
                transition transform duration-150 hover:scale-[1.25]
                hover:font-bold">
                    <h5 class="anim text-black cursor-pointer
                    -translate-y-[5px]"
                        style=@($@"
                        font-family: kaisei;
                        font-size: 80px;
                        z-index: 10;
                        text-shadow: 0 0 10px gray;")>
                        @GetRandomKanji()
                    </h5>
                    @if (MeaningsEnabled)
                    {
                        @* <h6 class="">@GetRandomNoun()</h6> *@
                    }
                </div>
            </div>
            <div class="flex flex-col">
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor sit amet, </MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor siim ad minim veniamercitation ullamco laboris</MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipor incididuniqua.llamco laboris</MudText>
            </div>
        </div>
        <div class="flex gap-10">
            @* <div class="absolute bg-slate-800 w-[100000px] h-full `top-[100px] -z-10" /> *@
            <div>
                <div class="
                relative w-[65px] flex flex-col h-[65px]
                items-center justify-center
                transition transform duration-150 hover:scale-[1.25]
                hover:font-bold">
                    <h5 class="anim text-black cursor-pointer
                    -translate-y-[5px]"
                        style=@($@"
                        font-family: kaisei;
                        font-size: 80px;
                        z-index: 10;
                        text-shadow: 0 0 10px gray;")>
                        @GetRandomKanji()
                    </h5>
                    @* <h6 class="">@GetRandomNoun()</h6> *@
                </div>
            </div>
            <div class="flex flex-col">
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor sit amet, </MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor siim ad minim veniamercitation ullamco laboris</MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipor incididuniqua.llamco laboris</MudText>
            </div>
        </div>
        <div class="flex gap-10">
            @* <div class="absolute bg-slate-800 w-[100000px] h-full `top-[100px] -z-10" /> *@
            <div>
                <div class="
                relative w-[65px] flex flex-col h-[65px]
                items-center justify-center
                transition transform duration-150 hover:scale-[1.25]
                hover:font-bold">
                    <h5 class="anim text-black cursor-pointer
                    -translate-y-[5px]"
                        style=@($@"
                        font-family: kaisei;
                        font-size: 80px;
                        z-index: 10;
                        text-shadow: 0 0 10px gray;")>
                        @GetRandomKanji()
                    </h5>
                    @* <h6 class="">@GetRandomNoun()</h6> *@
                </div>
            </div>
            <div class="flex flex-col">
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor sit amet, </MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor siim ad minim veniamercitation ullamco laboris</MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipor incididuniqua.llamco laboris</MudText>
            </div>
        </div>
        <div class="flex gap-10">
            @* <div class="absolute bg-slate-800 w-[100000px] h-full `top-[100px] -z-10" /> *@
            <div>
                <div class="
                relative w-[65px] flex flex-col h-[65px]
                items-center justify-center
                transition transform duration-150 hover:scale-[1.25]
                hover:font-bold">
                    <h5 class="anim text-black cursor-pointer
                    -translate-y-[5px]"
                        style=@($@"
                        font-family: kaisei;
                        font-size: 80px;
                        z-index: 10;
                        text-shadow: 0 0 10px gray;")>
                        @GetRandomKanji()
                    </h5>
                    <h6 class="">@GetRandomNoun()</h6>
                </div>
            </div>
            <div class="flex flex-col">
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor sit amet, </MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipsum dolor siim ad minim veniamercitation ullamco laboris</MudText>
                <MudText style="position:relative; z-index:10; cursor-pointer">Lorem ipor incididuniqua.llamco laboris</MudText>
            </div>
        </div>
    </div>

    <MudSwipeArea 
        OnSwipe="@OnSwipe" Class="fixed top-0 right-0 h-full w-[5%] z-20">
        <MudDrawer @ref=_drawer @bind-Open=@_drawerOpen Fixed=false Elevation=1 Anchor=@Anchor.Right
            Variant=@DrawerVariant.Persistent
            Class="relative right-0 z-20">
            <div class="absolute bg-settings w-full h-full opacity-25" />
            <MudDrawerHeader Class="fixed flex flex-col">
                <MudText Typo=@Typo.h6 Class="font-bold mb-5">Settings</MudText>
                <MudIconButton 
                    Icon=@Icons.Material.Filled.Close
                    OnClick=@(() => _drawer.Open = false ) 
                    Class="absolute right-0 top-[7px]"/>
                <div class="flex flex-col w-full">
                    <MudSwitch @bind-Checked=@MeaningsEnabled Label="Show Meanings" Color="Color.Info" Class="w-fit" />
                    <MudSwitch @bind-Checked=@HiraganaEnabled Label="Show Readings" Color="Color.Info" Class="w-fit" />
                </div>
            </MudDrawerHeader>
        </MudDrawer>
    </MudSwipeArea>
</div>

@code {
    private MudDrawer _drawer;

    private bool _meaningsEnabled;
    private bool MeaningsEnabled {
        get => _meaningsEnabled;
        set {
            _meaningsEnabled = value;
            InvokeAsync(StateHasChanged);
        }
    }

    private bool _hiraganaEnabled;
    private bool HiraganaEnabled {
        get => _hiraganaEnabled;
        set {
            _hiraganaEnabled = value;
            InvokeAsync(StateHasChanged);
        }
    }

    bool _drawerOpen;
    public void OnSwipe(SwipeDirection direction)
    {
        if (direction == SwipeDirection.RightToLeft && !_drawerOpen)
        {
            _drawerOpen = true;
            StateHasChanged();
        }
        else if (direction == SwipeDirection.LeftToRight && _drawerOpen)
        {
            _drawerOpen = false;
            StateHasChanged();
        }
    }

    static string GetRandomKanji()
    {
        var random = new Random();
        int randomCodePoint = random.Next(0x4E00, 0x4EFF);
        char randomKanji = Convert.ToChar(randomCodePoint);
        return randomKanji.ToString();
    }

    static string GetRandomNoun()
    {
        string[] nouns = {
            "cat", "dog", "apple", "book", "tree", "computer", "flower", "coffee", "moon", "mountain",
            "ocean", "car", "house", "music", "guitar", "sun", "rainbow", "friend", "pizza", "beach",
            "garden", "cloud", "star", "bird", "dragon", "island", "river", "unicorn", "key", "door",
            "time", "mirror", "sky", "fire", "ice cream", "wizard", "dream", "adventure", "robot", "puzzle",
            "sunset", "candle", "magic", "serenity", "treasure", "jungle", "laughter", "butterfly", "dolphin",
            "whale", "castle", "chocolate", "journey", "moonlight", "swan", "feather", "harmony", "sapphire",
            "thunder", "lighthouse", "harbor", "breeze", "cosmos", "mystery", "whisper", "zeppelin", "carousel"
        };

        var random = new Random();
        int randomIndex = random.Next(0, nouns.Length);
        return nouns[randomIndex];
    }

    static string GetRandomJLPTN5Word()
    {
        string[] jlptN5WordsHiragana = {
            "こんにちは", "ありがとう", "がっこう", "べんきょう", "たべる", "のむ", "いぬ", "ねこ", "ともだち", "かぞく",
            "とけい", "はな", "やま", "かわ", "あめ", "はれ", "くもり", "あかい", "あおい", "しろい",
            "くろい", "あたらしい", "ふるい", "おおきい", "ちいさい", "じょうず", "へた", "うれしい", "かなしい", "げんき",
            "びょうき", "いく", "くる", "みる", "きく", "はなす", "よむ", "かく", "かう", "うる",
            "もつ", "つかう", "おしえる", "ならう", "しる", "あう", "まつ", "とぶ", "およぐ", "はしる"
        };

        var random = new Random();
        int randomIndex = random.Next(0, jlptN5WordsHiragana.Length);
        return jlptN5WordsHiragana[randomIndex];
    }

    string GetRandomAnimClass()
    {
        string[] animClasses = { "anim", "anim2", "anim3", "anim4", "anim5" };
        Random random = new Random();
        int index = random.Next(animClasses.Length);
        return animClasses[index];
    }
}
